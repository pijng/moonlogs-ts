/* tslint:disable */
/* eslint-disable */
/**
 * Moonlogs
 * Moonlogs API
 *
 * The version of the OpenAPI document: 0.5.10
 * Contact: shalpack@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Level,
    LevelFromJSON,
    LevelFromJSONTyped,
    LevelToJSON,
} from './Level';

/**
 * 
 * @export
 * @interface Record
 */
export interface Record {
    /**
     * 
     * @type {number}
     * @memberof Record
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Record
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof Record
     */
    schemaName: string;
    /**
     * 
     * @type {number}
     * @memberof Record
     */
    schemaId?: number;
    /**
     * 
     * @type {object}
     * @memberof Record
     */
    query: object;
    /**
     * 
     * @type {string}
     * @memberof Record
     */
    kind: string;
    /**
     * 
     * @type {string}
     * @memberof Record
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof Record
     */
    groupHash?: string;
    /**
     * 
     * @type {Level}
     * @memberof Record
     */
    level?: Level | null;
}

export function RecordFromJSON(json: any): Record {
    return RecordFromJSONTyped(json, false);
}

export function RecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): Record {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'text': json['text'],
        'schemaName': json['schema_name'],
        'schemaId': !exists(json, 'schema_id') ? undefined : json['schema_id'],
        'query': json['query'],
        'kind': json['kind'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'groupHash': !exists(json, 'group_hash') ? undefined : json['group_hash'],
        'level': !exists(json, 'level') ? undefined : LevelFromJSON(json['level']),
    };
}

export function RecordToJSON(value?: Record | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'text': value.text,
        'schema_name': value.schemaName,
        'schema_id': value.schemaId,
        'query': value.query,
        'kind': value.kind,
        'created_at': value.createdAt,
        'group_hash': value.groupHash,
        'level': LevelToJSON(value.level),
    };
}

